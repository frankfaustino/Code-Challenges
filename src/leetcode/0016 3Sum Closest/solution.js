/**
 * @param {number[]} nums
 * @param {number} target
 * @return {number}
 */
function threeSumClosest(nums, target) {
    nums = nums.sort((a, b) => a - b)
    let closest = Number.MAX_VALUE

    for (let i = 0; i < nums.length - 2; i++) {
        let left = i + 1
        let right = nums.length - 1
        let sum = 0

        while (left < right) {
            sum = nums[left] + nums[i] + nums[right]
            if (Math.abs(target - sum) < Math.abs(closest)) {
                closest = target - sum
            }
            if (sum < target) {
                left++
            } else {
                right--
            }
        }
    }
    return target - closest
}

console.log(threeSumClosest([4,0,5,-5,3,3,0,-4,-5], -2)) // -2
console.log(threeSumClosest([1,2,3,4,5,6], 6)) // 6
console.log(threeSumClosest([-1,2,1,-4,3], 1)) // 2

console.log(threeSumClosest([1,1,1,0], -100)) // 2
console.log(threeSumClosest([-1,2,1,-4], 1)) // 2

console.log(threeSumClosest([0,0,0], 1)) // 0
console.log(threeSumClosest([704,498,-169,-251,888,290,546,109,-531,44,-729,200,-673,-474,686,-583,995,-127,489,-651,-437,581,-86,-89,655,-228,943,-618,375,915,-823,751,-157,230,959,-910,-470,-582,752,-812,-154,280,679,687,455,-547,553,198,-249,777,-629,601,575,-481,-677,-634,565,324,-1000,287,-399,718,-360,332,133,22,726,-698,-840,372,931,-641,-790,330,-19,742,-689,217,452,-885,-584,-108,-134,-387,889,728,99,-28,-236,21,505,905,421,-233,688,-839,792,-316,-669,-989,-454,-392,914,859,534,-748,609,221,104,847,-893,811,-153,-423,-502,-764,297,-613,705,245,885,-527,-394,153,-229,-567,-516,-243,950,-62,-852,295,289,-761,-205,-419,-405,-213,-253,-687,939,-574,-656,-41,772,897,-96,837,-348,560,-271,-146,-358,806,919,54,-914,-7,5,-978,-95,762,-508,323,-760,-892,-472,-588,312,604,310,-897,144,-874,-364,-287,335,-876,749,-856,853,-183,-36,495,-298,-809,904,309,713,376,215,384,-3,1,343,886,-356,150,-793,-182,938,-47,-302,840,63,-44,-931,-630,-324,36,201,-338,606,-199,833,-518,-566,-941,-373,-755,-513,-781,-72,51,-682,-734,-750,-76,-826,-135,963,628,-889,856,-769,634,672,921,225,528,303,157,-640,667,927,-74,-222,37,635,316,987,-327,491,-930,-31,733,-546,-258,277,-725,82,993,-189,278,-623,-303,220,962,-690,724,-362,738,-132,-901,-6,-291,-993,-745,-323,-242,864,816,-975,-990,-155,-632,-181,-478,-920,449,996,-15,437,-75,-497,204,798,973,770,-407,-741,115,526,-130,631,-664,-801,326,353,619,-414,730,836,890,45,-879,-408,-727,-217,-139,-951,-129,446,81,-773,-777,-124,-118,-442,336,-512,-104,626,-204,-162,-705,43,-511,-288,-571,-422,471,-149,339,-524,-59,32,757,-976,-927,30,-176,409,-461,55,420,763,531,-30,147,-771,675,129,-20,795,-35,178,-903,-550,94,216,-37,367,424,870,-402,-70,-499,229,354,80,199,-947,258,587,317,-398,149,-829,-836,820,590,-317,253,-949,-817,-393,-708,-845,300,937,113,685,-683,519,656,-917,826,-515,593,-813,-757,-173,-262,-593,545,819,-639,298,778,-672,-849,-728,248,463,-948,-738,-331,195,815,788,187,-306,-589,183,-542,-521,642,122,940,-732,211,487,-802,-277,736,-774,-60,-496,-624,863,-5,666,-272,177,596,-553,523,-960,47,-431,292,405,373,-796,269,-636,-77,419,926,595,-563,67,108,-501,-90,591,-765,766,-674,-653,-114,-25,880,682,802,-643,-378,981,748,386,537,510,-916,-482,-850,-694,669,-463,956,188,-578,359,380,832,712,431,443,58,-97,558,347,731,264,381,-577,-1,-661,-701,-604,-514,-686,-870,-115,899,865,501,41,644,223,257,-55,615,935,-545,-354,-791,969,-300,103,583,-616,-98,123,-319,351,492,193,852,-883,966,35,-998,403,961,408,396,-480,466,-860,192,508,727,-8,-241,-128,-142,-825,-84,-121,313,493,430,128,453,490,-805,-247,-794,-16,237,93,-172,417,119,-61,-246,-471,924,-264,-650,689,-565,171,892,-548,286,-534,-549,458,838,997,592,-420,-853,-473,-438,497,185,648,-529,65,-865,-56,783,-469,603,-595,983,97,827,-628,-417,124,-964,460,-297,238,-647,-758,834,285,-100,942,33,662,-50,-983,554,-649,-359,24,-520,-240,392,814,-230,-573,-780,-736,-505,196,-368,410,25,-988,355,970,-226,577,494,-942,-782,361,-256,469,-53,233,-908,-339,-412,-161,-606,84,708,-67,250,7,-966,-768,-598,-724,-559,-395,-278,932,831,974,541,307,390,222,-216,503,911,744,582,-731,445,441,805,329,-938,480,34,242,773,301,-170,305,-276,-105,514,-867,296,521,-576,-24,344,96,896,-79,557,-212,-177,318,843,-201,-969,647,-465,-263,882,-314,362,382,-561,365,-751,-32,707,-4,-147,-224,659,-333,-429,-868,-980,-620,-421,-51,-112,-211,167,824,-605,261,775,849,-665,71,-880,574,393,-434,194,-388,-517,155,308,530,-363,53,438,-740,579,-367,520,-231,-913,-185,62,725,776,-986,85,-929,-778,-468,861,219,-432,-309,-939,934,478,38,-638,-22,8,702,566,400,830,-660,328,485,622,-581,-27,-209,440,-905,957,986,180,-83,-695,-186,-935,809,-361,-737,-43,174,-244,-797,-814,-766,796,-644,960,695,-585,240,17,638,513,616,394,-858,-257,-219,-558,266,284,49,162,-49,860,854,-143,191,573,710,-648,349,-703,75,-926,254,-700], -2491))
